# 任务名称

name: Deploy Blog

# 触发条件
on:
  # 当项目文件 push 到 prod 分支后，可以是 push 可以是 merge
  push:
    branches: [ prod ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job名称
  build-and-deploy:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest

    # action奇妙的步骤
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"
          
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 缓存 node_modules
      # - name: Cache dependencies
      #   uses: actions/cache@v4
      #   id: yarn-cache
      #   with:
      #     path: |
      #       **/node_modules
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-


      # 如果缓存没有命中的话，编译&生成静态文件，可以用yarn或npm
      - name: install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      
      - name: build
        run: yarn build

      # 部署到github.io静态网站
      - name: Deploy Docs To GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          # git-config-name: 邵鹏飞
          token: ${{ secrets.BLOG_DEPLOY }}
          clean: true
          # repository-name: RayShineHub/RayShineHub.github.io
          branch: gh-pages
          folder: dist
          
      # 部署到gitee.io静态网站
      #- name: Deploy Docs To Gitee Pages
      #  uses: wearerequired/git-mirror-action@v1
      #  env:
      #    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #    #SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      #  with:
      #    source-repo: "git@github.com:wearerequired/git-mirror-action.git"
      #    destination-repo: "git@bitbucket.org:wearerequired/git-mirror-action.git"
      #- name: reload
      #  uses: mizuka-wu/gitee-pages-action@v1.0.0
      #  with:
      #    repository: linzowo/linzowo
      #    cookie: ${{ secrets.GITEE_COOKIE }}
      #    branch: gh_pages
          
          
      # 部署到阿里云远程服务器 
      - name: Deploy blog To Aliyun Remote Server
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: '${{ secrets.SERVER_SFTP_USERNAME }}'
          server: '${{ secrets.SERVER_IP_ALIYUN }}'
          ssh_private_key: '${{ secrets.SSH_PRIVATE_KEY_ALIYUN }}'
          local_path: './dist/*'
          remote_path: '/opt/blog'

      # - name: Deploy blog To Aliyun Remote Server
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: '${{ secrets.SSH_PRIVATE_KEY_ALIYUN }}'
      #     REMOTE_USER: '${{ secrets.SERVER_SFTP_USERNAME }}'
      #     REMOTE_HOST: '${{ secrets.SERVER_IP_ALIYUN }}'
      #     SOURCE: './dist/*'
      #     TARGET: '/blog'
      #     ARGS: "-avz --chown=deployer:deployer"
          
          
      # 部署到腾讯云远程服务器
      # - name: Deploy blog To Tencent Remote Server
      #   uses: wlixcc/SFTP-Deploy-Action@v1.0
      #   with:
      #     username: '${{ secrets.SERVER_SFTP_USERNAME_TENCENT }}'
      #     server: '${{ secrets.SERVER_IP_TENCENT }}'
      #     ssh_private_key: '${{ secrets.SSH_PRIVATE_KEY_TENCENT }}'
      #     local_path: './dist/*'
      #     remote_path: '/blog'

      