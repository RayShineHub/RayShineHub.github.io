(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{502:function(v,_,e){"use strict";e.r(_);var o=e(2),t=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[_("code",[v._v("MVC")]),v._v(" 和 "),_("code",[v._v("MVVM")]),v._v(" 是常见的软件架构设计模式，主要通过分离关注点的方式来组织代码结构，优化开发效率。\n"),v._v("\n在开发单页面应用时，往往一个路由页面对应了一个脚本文件，所有的页面逻辑都在一个脚本文件里。页面的渲染、数据的获取，对用户事件的响应所有的应用逻辑都混合在一起，这样在开发简单项目时，可能看不出什么问题，如果项目变得复杂，那么整个文件就会变得冗长、混乱，这样对项目开发和后期的项目维护是非常不利的。")]),v._v(" "),_("h2",{attrs:{id:"mvc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[v._v("#")]),v._v(" MVC")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("M")]),v._v("："),_("code",[v._v("Model")]),v._v(" 负责存储页面的业务数据，以及对相应数据的操作。")]),v._v(" "),_("li",[_("strong",[v._v("V")]),v._v("："),_("code",[v._v("View")]),v._v(" 负责页面的显示逻辑。")]),v._v(" "),_("li",[_("strong",[v._v("C")]),v._v("："),_("code",[v._v("Controller")]),v._v(" 是 View 层和 Model 层的纽带，它主要负责用户与应用的响应操作。")])]),v._v(" "),_("p",[v._v("当用户与页面产生交互的时候，"),_("code",[v._v("Controller")]),v._v(" 中的事件触发器就开始工作了，通过调用 "),_("code",[v._v("Model")]),v._v(" 层，来完成对 "),_("code",[v._v("Model")]),v._v(" 的修改，然后 "),_("code",[v._v("Model")]),v._v(" 层再去通知 "),_("code",[v._v("View")]),v._v(" 层更新。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.rayshine.site/MVC%E5%92%8CMVVM%E7%9A%84%E5%8C%BA%E5%88%AB/mvc.png",alt:"MVC原理"}})]),v._v(" "),_("h2",{attrs:{id:"mvvm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[v._v("#")]),v._v(" MVVM")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("M")]),v._v("："),_("code",[v._v("Model")]),v._v(" 代表数据模型，数据和业务逻辑都在 "),_("code",[v._v("Model")]),v._v(" 层中定义。")]),v._v(" "),_("li",[_("strong",[v._v("V")]),v._v("："),_("code",[v._v("View")]),v._v(" 代表 UI 视图，负责数据的展示。")]),v._v(" "),_("li",[_("strong",[v._v("VM")]),v._v("："),_("code",[v._v("ViewModel")]),v._v(" 负责监听 "),_("code",[v._v("Model")]),v._v(" 中数据的改变并且控制视图的更新，处理用户交互操作。")])]),v._v(" "),_("p",[_("code",[v._v("Model")]),v._v(" 和 "),_("code",[v._v("View")]),v._v(" 并无直接关联，而是通过 "),_("code",[v._v("ViewModel")]),v._v(" 来进行联系的，"),_("code",[v._v("Model")]),v._v(" 和 "),_("code",[v._v("ViewModel")]),v._v(" 之间有着双向数据绑定的联系。因此当 "),_("code",[v._v("Model")]),v._v(" 中的数据改变时会触发 "),_("code",[v._v("View")]),v._v(" 层的刷新，"),_("code",[v._v("View")]),v._v(" 中由于用户交互操作而改变的数据也会在 "),_("code",[v._v("Model")]),v._v(" 中同步。")]),v._v(" "),_("p",[v._v("这种模式实现了 "),_("code",[v._v("Model")]),v._v(" 和 "),_("code",[v._v("View")]),v._v(" 的数据自动同步，因此开发者只需要专注于数据的维护操作即可，而不需要自己操作 "),_("code",[v._v("DOM")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.rayshine.site/MVC%E5%92%8CMVVM%E7%9A%84%E5%8C%BA%E5%88%AB/mvvm.png",alt:"MVVM原理"}})])])}),[],!1,null,null,null);_.default=t.exports}}]);